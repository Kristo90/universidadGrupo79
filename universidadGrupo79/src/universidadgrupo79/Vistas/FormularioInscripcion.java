
package universidadgrupo79.Vistas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadgrupo79.AccesoaDatos.AlumnoData;
import universidadgrupo79.AccesoaDatos.Conexion;
import universidadgrupo79.AccesoaDatos.InscripcionData;
import universidadgrupo79.AccesoaDatos.MateriasData;
import universidadgrupo79.Entidades.Alumno;
import universidadgrupo79.Entidades.Inscripcion;
import universidadgrupo79.Entidades.Materia;

public class FormularioInscripcion extends javax.swing.JInternalFrame {

    private DefaultTableModel tablaMat = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };

    /**
     * Creates new form FormularioInscripcion
     */
    public FormularioInscripcion() {
        initComponents();
        cargaCombo();
        armarCabecera();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        Jcseleccionalu = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jRinscriptas = new javax.swing.JRadioButton();
        jRnoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTmateriasAlu = new javax.swing.JTable();
        jBinscribir = new javax.swing.JButton();
        jBanularIns = new javax.swing.JButton();
        jBsalir = new javax.swing.JButton();

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Inscripción a Materias");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Seleccione un Alumno:");

        Jcseleccionalu.setToolTipText("");
        Jcseleccionalu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcseleccionaluActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Listado de Materias");

        jRinscriptas.setText("Materias Inscriptas");
        jRinscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRinscriptasActionPerformed(evt);
            }
        });

        jRnoInscriptas.setText("Materias no inscriptas");
        jRnoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRnoInscriptasActionPerformed(evt);
            }
        });

        jTmateriasAlu.setAutoCreateRowSorter(true);
        jTmateriasAlu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Año"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTmateriasAlu);

        jBinscribir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/check_40622.png"))); // NOI18N
        jBinscribir.setText("Inscribir");
        jBinscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBinscribirActionPerformed(evt);
            }
        });

        jBanularIns.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/warning_30850.png"))); // NOI18N
        jBanularIns.setText("Anular Inscripcion");
        jBanularIns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBanularInsActionPerformed(evt);
            }
        });

        jBsalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Salir.png"))); // NOI18N
        jBsalir.setText("Salir");
        jBsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBsalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(227, 227, 227))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(jRinscriptas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jRnoInscriptas)
                .addGap(118, 118, 118))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(29, 29, 29)
                                .addComponent(Jcseleccionalu, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jBinscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(jBanularIns)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jBsalir)))))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Jcseleccionalu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRinscriptas)
                    .addComponent(jRnoInscriptas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBinscribir)
                    .addComponent(jBanularIns)
                    .addComponent(jBsalir))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JcseleccionaluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcseleccionaluActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_JcseleccionaluActionPerformed

    private void jRinscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRinscriptasActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        jBinscribir.setEnabled(false);
        jBanularIns.setEnabled(true);

        jRnoInscriptas.setSelected(false);

        InscripcionData id = new InscripcionData();
        Alumno alu = (Alumno) Jcseleccionalu.getSelectedItem();
        ArrayList<Materia> materias = new ArrayList<>();
        materias = (ArrayList<Materia>) id.listarMateriaIns(alu.getIdAlumno());

        cargarTabla(materias);
    }//GEN-LAST:event_jRinscriptasActionPerformed

    private void jRnoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRnoInscriptasActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        jBinscribir.setEnabled(true);
        jBanularIns.setEnabled(false);
        jRinscriptas.setSelected(false);

        InscripcionData id = new InscripcionData();
        Alumno alu = (Alumno) Jcseleccionalu.getSelectedItem();
        ArrayList<Materia> materias = new ArrayList<>();
        materias = id.listarMateriaNC(alu.getIdAlumno());

        cargarTabla(materias);
    }//GEN-LAST:event_jRnoInscriptasActionPerformed

    private void jBanularInsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBanularInsActionPerformed
        // TODO add your handling code here:
        FormularioInscripcion fi=new FormularioInscripcion();
        MateriasData md = new MateriasData();
        InscripcionData id = new InscripcionData();
        Alumno alu = new Alumno();
        int filaS = jTmateriasAlu.getSelectedRow();

        if (filaS != -1) {

            int idMat = (Integer) jTmateriasAlu.getValueAt(filaS, 0);

            alu= (Alumno) Jcseleccionalu.getSelectedItem();
            int idAlu=alu.getIdAlumno();

            id.borrarInscripcionMateriaAlumno(idAlu, idMat);
            //
            
            
        }
    }//GEN-LAST:event_jBanularInsActionPerformed

    private void jBsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBsalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jBsalirActionPerformed

    private void jBinscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBinscribirActionPerformed
        // TODO add your handling code here:

        MateriasData md = new MateriasData();
        InscripcionData id = new InscripcionData();
        int filaS = jTmateriasAlu.getSelectedRow();

        if (filaS != -1) {

            int idMat = (Integer) jTmateriasAlu.getValueAt(filaS, 0);

            Materia materia = md.buscarMateria(idMat);

            Inscripcion inscrip = new Inscripcion((Alumno) Jcseleccionalu.getSelectedItem(), materia, 0);

            id.guardarInscripcion(inscrip);


    }//GEN-LAST:event_jBinscribirActionPerformed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Alumno> Jcseleccionalu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jBanularIns;
    private javax.swing.JButton jBinscribir;
    private javax.swing.JButton jBsalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRinscriptas;
    private javax.swing.JRadioButton jRnoInscriptas;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTmateriasAlu;
    // End of variables declaration//GEN-END:variables
private void cargaCombo() {
        AlumnoData aluD = new AlumnoData();
        ArrayList<Alumno> alu = new ArrayList<>();
        alu = (ArrayList<Alumno>) aluD.listarAlumno();

        for (Alumno alumno : alu) {
            Jcseleccionalu.addItem(alumno);
        }
    }

    private void armarCabecera() {
        tablaMat.addColumn("ID");
        tablaMat.addColumn("Nombre");
        tablaMat.addColumn("Año");
        jTmateriasAlu.setModel(tablaMat);

    }

    private void cargarTabla(ArrayList<Materia> mat) {

        for (Materia materia : mat) {
            Object[] newmat = {materia.getIdMateria(), materia.getNombre(), materia.getAnioMateria()};
            tablaMat.addRow(newmat);

        }
    }

    private void limpiarTabla() {

        tablaMat.setRowCount(0);
    }

}
